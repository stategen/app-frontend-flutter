///  Do not remove this unless you get business authorization.
///  GoodsDetail
///  init by [stategen.progen] ,can be edit manually ,keep when "keep this"
///  由 [stategen.progen]代码生成器初始化，可以手工修改,但如果遇到 keep this ,请保留导出设置以备外部自动化调用
import 'package:flutter/material.dart';
import 'package:fluro/fluro.dart';
import 'package:provider/provider.dart';
import 'goodsdetail_provider.dart';


class GoodsDetailPage extends StatelessWidget {
  // 路由路径
  static final String path = '/goodsDetail';

  // 路由创建方式
  static final Handler handler = Handler(
    handlerFunc: (BuildContext context, Map<String, List<String>> params) {
      return GoodsDetailProvider.create(
        child: GoodsDetailPage(params: params)
      );
    }
  );

  Map<String, List<String>> params;

  GoodsDetailPage({this.params});

  @override
  Widget build(BuildContext context) {
    // 这里提供provider是避免省事，将provider全部配到main下，而不能释放资源
    return GoodsDetailProvider.create(
      child: GoodsDetailScene(),
    );
  }
}

class GoodsDetailScene extends StatefulWidget {

  @override
  _GoodsDetailPageState createState() => _GoodsDetailPageState();

}

class _GoodsDetailPageState extends State<GoodsDetailScene> {

  GoodsDetailProvider goodsDetailProvider;

  @override
  void didChangeDependencies() {
    super.didChangeDependencies();
    // state在整个生部周期只需要拿和注册一次
    goodsDetailProvider = GoodsDetailProvider.of(context);
  }

  @override
  Widget build(BuildContext context) {
    //var fetched = goodsDetailProvider.goodsDetailWrapArea.fetched ?? false;
    //if (!fetched) {
    //  goodsDetailProvider.xxx(context,);
    //}

    return Text('goodsDetail Page 创建成功!');
  }

}